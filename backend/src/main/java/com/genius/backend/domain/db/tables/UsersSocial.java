/*
 * This file is generated by jOOQ.
 */
package com.genius.backend.domain.db.tables;


import com.genius.backend.domain.db.Genius;
import com.genius.backend.domain.db.Indexes;
import com.genius.backend.domain.db.Keys;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersSocial extends TableImpl<Record> {

    private static final long serialVersionUID = -51101450;

    /**
     * The reference instance of <code>genius.users_social</code>
     */
    public static final UsersSocial USERS_SOCIAL = new UsersSocial();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>genius.users_social.ID</code>.
     */
    public final TableField<Record, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>genius.users_social.USER_ID</code>.
     */
    public final TableField<Record, Integer> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>genius.users_social.ACCESS_TOKEN</code>.
     */
    public final TableField<Record, String> ACCESS_TOKEN = createField("ACCESS_TOKEN", org.jooq.impl.SQLDataType.VARCHAR(250).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>genius.users_social.REFRESH_TOKEN</code>.
     */
    public final TableField<Record, String> REFRESH_TOKEN = createField("REFRESH_TOKEN", org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>genius.users_social.SECRET</code>.
     */
    public final TableField<Record, String> SECRET = createField("SECRET", org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>genius.users_social.PAGE_USER_ID</code>.
     */
    public final TableField<Record, String> PAGE_USER_ID = createField("PAGE_USER_ID", org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>genius.users_social.PAGE_ACCESS_TOKEN</code>.
     */
    public final TableField<Record, String> PAGE_ACCESS_TOKEN = createField("PAGE_ACCESS_TOKEN", org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>genius.users_social.MESSAGE_ACCESS_TOKEN</code>.
     */
    public final TableField<Record, String> MESSAGE_ACCESS_TOKEN = createField("MESSAGE_ACCESS_TOKEN", org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>genius.users_social.EXPIRED_TIME</code>.
     */
    public final TableField<Record, Long> EXPIRED_TIME = createField("EXPIRED_TIME", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>genius.users_social.REG_DATETIME</code>.
     */
    public final TableField<Record, Timestamp> REG_DATETIME = createField("REG_DATETIME", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>genius.users_social.MOD_DATETIME</code>.
     */
    public final TableField<Record, Timestamp> MOD_DATETIME = createField("MOD_DATETIME", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>genius.users_social</code> table reference
     */
    public UsersSocial() {
        this(DSL.name("users_social"), null);
    }

    /**
     * Create an aliased <code>genius.users_social</code> table reference
     */
    public UsersSocial(String alias) {
        this(DSL.name(alias), USERS_SOCIAL);
    }

    /**
     * Create an aliased <code>genius.users_social</code> table reference
     */
    public UsersSocial(Name alias) {
        this(alias, USERS_SOCIAL);
    }

    private UsersSocial(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private UsersSocial(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UsersSocial(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, USERS_SOCIAL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Genius.GENIUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USERS_SOCIAL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Integer> getIdentity() {
        return Keys.IDENTITY_USERS_SOCIAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.KEY_USERS_SOCIAL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.KEY_USERS_SOCIAL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersSocial as(String alias) {
        return new UsersSocial(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersSocial as(Name alias) {
        return new UsersSocial(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UsersSocial rename(String name) {
        return new UsersSocial(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UsersSocial rename(Name name) {
        return new UsersSocial(name, null);
    }
}
