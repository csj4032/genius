/*
 * This file is generated by jOOQ.
 */
package com.genius.backend.domain.db;


import com.genius.backend.domain.db.tables.Alimy;
import com.genius.backend.domain.db.tables.AlimyUnits;
import com.genius.backend.domain.db.tables.Logs;
import com.genius.backend.domain.db.tables.Privilege;
import com.genius.backend.domain.db.tables.Roles;
import com.genius.backend.domain.db.tables.RolesPrivileges;
import com.genius.backend.domain.db.tables.Users;
import com.genius.backend.domain.db.tables.UsersRoles;
import com.genius.backend.domain.db.tables.UsersSocial;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>genius</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<Record, Integer> IDENTITY_ALIMY = Identities0.IDENTITY_ALIMY;
    public static final Identity<Record, Integer> IDENTITY_ALIMY_UNITS = Identities0.IDENTITY_ALIMY_UNITS;
    public static final Identity<Record, Integer> IDENTITY_LOGS = Identities0.IDENTITY_LOGS;
    public static final Identity<Record, Integer> IDENTITY_PRIVILEGE = Identities0.IDENTITY_PRIVILEGE;
    public static final Identity<Record, Integer> IDENTITY_ROLES = Identities0.IDENTITY_ROLES;
    public static final Identity<Record, Integer> IDENTITY_ROLES_PRIVILEGES = Identities0.IDENTITY_ROLES_PRIVILEGES;
    public static final Identity<Record, Integer> IDENTITY_USERS = Identities0.IDENTITY_USERS;
    public static final Identity<Record, Integer> IDENTITY_USERS_ROLES = Identities0.IDENTITY_USERS_ROLES;
    public static final Identity<Record, Integer> IDENTITY_USERS_SOCIAL = Identities0.IDENTITY_USERS_SOCIAL;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<Record> KEY_ALIMY_PRIMARY = UniqueKeys0.KEY_ALIMY_PRIMARY;
    public static final UniqueKey<Record> KEY_ALIMY_UNITS_PRIMARY = UniqueKeys0.KEY_ALIMY_UNITS_PRIMARY;
    public static final UniqueKey<Record> KEY_ALIMY_UNITS_ALIMY_UNIT_UNIQUE = UniqueKeys0.KEY_ALIMY_UNITS_ALIMY_UNIT_UNIQUE;
    public static final UniqueKey<Record> KEY_LOGS_PRIMARY = UniqueKeys0.KEY_LOGS_PRIMARY;
    public static final UniqueKey<Record> KEY_PRIVILEGE_PRIMARY = UniqueKeys0.KEY_PRIVILEGE_PRIMARY;
    public static final UniqueKey<Record> KEY_ROLES_PRIMARY = UniqueKeys0.KEY_ROLES_PRIMARY;
    public static final UniqueKey<Record> KEY_ROLES_PRIVILEGES_PRIMARY = UniqueKeys0.KEY_ROLES_PRIVILEGES_PRIMARY;
    public static final UniqueKey<Record> KEY_USERS_PRIMARY = UniqueKeys0.KEY_USERS_PRIMARY;
    public static final UniqueKey<Record> KEY_USERS_PROVIDER_UNIQUE = UniqueKeys0.KEY_USERS_PROVIDER_UNIQUE;
    public static final UniqueKey<Record> KEY_USERS_ROLES_PRIMARY = UniqueKeys0.KEY_USERS_ROLES_PRIMARY;
    public static final UniqueKey<Record> KEY_USERS_ROLES_USER_ID_USER_ID_UNIQUE = UniqueKeys0.KEY_USERS_ROLES_USER_ID_USER_ID_UNIQUE;
    public static final UniqueKey<Record> KEY_USERS_SOCIAL_PRIMARY = UniqueKeys0.KEY_USERS_SOCIAL_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<Record, Integer> IDENTITY_ALIMY = Internal.createIdentity(Alimy.ALIMY, Alimy.ALIMY.ID);
        public static Identity<Record, Integer> IDENTITY_ALIMY_UNITS = Internal.createIdentity(AlimyUnits.ALIMY_UNITS, AlimyUnits.ALIMY_UNITS.ID);
        public static Identity<Record, Integer> IDENTITY_LOGS = Internal.createIdentity(Logs.LOGS, Logs.LOGS.ID);
        public static Identity<Record, Integer> IDENTITY_PRIVILEGE = Internal.createIdentity(Privilege.PRIVILEGE, Privilege.PRIVILEGE.ID);
        public static Identity<Record, Integer> IDENTITY_ROLES = Internal.createIdentity(Roles.ROLES, Roles.ROLES.ID);
        public static Identity<Record, Integer> IDENTITY_ROLES_PRIVILEGES = Internal.createIdentity(RolesPrivileges.ROLES_PRIVILEGES, RolesPrivileges.ROLES_PRIVILEGES.ID);
        public static Identity<Record, Integer> IDENTITY_USERS = Internal.createIdentity(Users.USERS, Users.USERS.ID);
        public static Identity<Record, Integer> IDENTITY_USERS_ROLES = Internal.createIdentity(UsersRoles.USERS_ROLES, UsersRoles.USERS_ROLES.ID);
        public static Identity<Record, Integer> IDENTITY_USERS_SOCIAL = Internal.createIdentity(UsersSocial.USERS_SOCIAL, UsersSocial.USERS_SOCIAL.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<Record> KEY_ALIMY_PRIMARY = Internal.createUniqueKey(Alimy.ALIMY, "KEY_alimy_PRIMARY", Alimy.ALIMY.ID);
        public static final UniqueKey<Record> KEY_ALIMY_UNITS_PRIMARY = Internal.createUniqueKey(AlimyUnits.ALIMY_UNITS, "KEY_alimy_units_PRIMARY", AlimyUnits.ALIMY_UNITS.ID);
        public static final UniqueKey<Record> KEY_ALIMY_UNITS_ALIMY_UNIT_UNIQUE = Internal.createUniqueKey(AlimyUnits.ALIMY_UNITS, "KEY_alimy_units_ALIMY_UNIT_UNIQUE", AlimyUnits.ALIMY_UNITS.ALIMY_ID, AlimyUnits.ALIMY_UNITS.UNIT_TYPE);
        public static final UniqueKey<Record> KEY_LOGS_PRIMARY = Internal.createUniqueKey(Logs.LOGS, "KEY_logs_PRIMARY", Logs.LOGS.ID);
        public static final UniqueKey<Record> KEY_PRIVILEGE_PRIMARY = Internal.createUniqueKey(Privilege.PRIVILEGE, "KEY_privilege_PRIMARY", Privilege.PRIVILEGE.ID);
        public static final UniqueKey<Record> KEY_ROLES_PRIMARY = Internal.createUniqueKey(Roles.ROLES, "KEY_roles_PRIMARY", Roles.ROLES.ID);
        public static final UniqueKey<Record> KEY_ROLES_PRIVILEGES_PRIMARY = Internal.createUniqueKey(RolesPrivileges.ROLES_PRIVILEGES, "KEY_roles_privileges_PRIMARY", RolesPrivileges.ROLES_PRIVILEGES.ID);
        public static final UniqueKey<Record> KEY_USERS_PRIMARY = Internal.createUniqueKey(Users.USERS, "KEY_users_PRIMARY", Users.USERS.ID);
        public static final UniqueKey<Record> KEY_USERS_PROVIDER_UNIQUE = Internal.createUniqueKey(Users.USERS, "KEY_users_PROVIDER_UNIQUE", Users.USERS.PROVIDER_TYPE, Users.USERS.PROVIDER_USER_ID);
        public static final UniqueKey<Record> KEY_USERS_ROLES_PRIMARY = Internal.createUniqueKey(UsersRoles.USERS_ROLES, "KEY_users_roles_PRIMARY", UsersRoles.USERS_ROLES.ID);
        public static final UniqueKey<Record> KEY_USERS_ROLES_USER_ID_USER_ID_UNIQUE = Internal.createUniqueKey(UsersRoles.USERS_ROLES, "KEY_users_roles_USER_ID_USER_ID_UNIQUE", UsersRoles.USERS_ROLES.USER_ID, UsersRoles.USERS_ROLES.ROLE_ID);
        public static final UniqueKey<Record> KEY_USERS_SOCIAL_PRIMARY = Internal.createUniqueKey(UsersSocial.USERS_SOCIAL, "KEY_users_social_PRIMARY", UsersSocial.USERS_SOCIAL.ID);
    }
}
